
name: "Transfer"

on:
  workflow_dispatch:
    inputs:
      unityVersions:
        description: "Unity versions array to build"
        required: true
        default: '[ "2018.4.30f1" ]'
      module:
        description: "Unity modules array to build.\n(-base|-linux-il2cpp|-windows-mono|-mac-mono|-ios|-android|-webgl)"
        required: true
        default: '-base'
      version:
        description: "Image version (e.g. -1.3.0)"
        required: true
        default: '-1.3.0'

env:
  unityImageTo: ghcr.io/mob-sakai/unity3d
  unityImageFrom: docker.io/mobsakai/unity3d

jobs:
  build:
    name: Transfer ${{ matrix.unityVersions }}${{ inputs.module }}${{ inputs.version }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
      actions: write
    env:
      tag: ${{ matrix.unityVersions }}${{ inputs.module }}${{ inputs.version }}
      tagWithoutVersion: ${{ matrix.unityVersions }}${{ inputs.module }}
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        unityVersions: ${{ fromJson(inputs.unityVersions) }}
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: mob-sakai
          password: ${{ github.token }}
      - run: |
          echo "Transfer ${{ env.unityImageFrom }}:${{ env.tag }} -> ${{ env.unityImageTo }}:${{ env.tag }}"
          docker pull ${{ env.unityImageFrom }}:${{ env.tag }}
          docker tag ${{ env.unityImageFrom }}:${{ env.tag }} ${{ env.unityImageTo }}:${{ env.tag }}
          docker push ${{ env.unityImageTo }}:${{ env.tag }}
      - if: inputs.version != ''
        run: |
          echo "Transfer ${{ env.unityImageFrom }}:${{ env.tag }} -> ${{ env.unityImageTo }}:${{ env.tagWithoutVersion }}"
          docker tag ${{ env.unityImageFrom }}:${{ env.tag }} ${{ env.unityImageTo }}:${{ env.tagWithoutVersion }}
          docker push ${{ env.unityImageTo }}:${{ env.tagWithoutVersion }}
      - if: inputs.module == '-base'
        run: |
          echo "Transfer ${{ env.unityImageFrom }}:${{ env.tag }} -> ${{ env.unityImageTo }}:${{ matrix.unityVersions }}"
          docker tag ${{ env.unityImageFrom }}:${{ env.tag }} ${{ env.unityImageTo }}:${{ matrix.unityVersions }}
          docker push ${{ env.unityImageTo }}:${{ matrix.unityVersions }}
