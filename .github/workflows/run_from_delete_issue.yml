# name: run_from_create_issue

# on:
#   workflow_dispatch:
#     inputs:
#       versions:
#         description: "Unity versions array to build"
#         required: true
#         default: '[ \"2018.4.30f1\" ]'
#       modules:
#         description: "Unity modules array to build.\n(base|linux-il2cpp|windows-mono|mac-mono|ios|android|webgl)"
#         required: true
#         default: '[ \"base\", \"linux-il2cpp\", \"windows-mono\", \"mac-mono\", \"ios\", \"android\", \"webgl\" ]'
#   issues:
#     types: [opened, reopened]

# jobs:
#   setup:
#     if: github.event_name != 'issues' || github.event.issue.body == '/build-editor'
#     runs-on: ubuntu-latest
#     outputs:
#       versions: ${{ steps.setup.outputs.versions }}
#       modules: ${{ steps.setup.outputs.modules }}
#     steps:
#       - if: github.event_name == 'issues'
#         uses: peter-evans/close-issue@v2
#         with:
#           comment: Build started
#       - id: setup
#         run: |
#           if [ "${{ github.event_name }}" = "issues" ]; then
#             echo 'versions=[ "${{ github.event.issue.title }}" ]' | tee >> $GITHUB_OUTPUT
#             echo 'modules=[ "base", "linux-il2cpp", "windows-mono", "mac-mono", "ios", "android", "webgl" ]' | tee >> $GITHUB_OUTPUT
#           else
#             echo "versions=${{ github.event.inputs.versions }}" | tee >> $GITHUB_OUTPUT
#             echo "modules=${{ github.event.inputs.modules }}" | tee >> $GITHUB_OUTPUT
#           fi

#   build:
#     needs: setup
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         version: ${{ fromJson(needs.setup.outputs.versions) }}
#         module: ${{ fromJson(needs.setup.outputs.modules) }}
#     steps:
#       - run: |
#           echo "Building ${{ matrix.version }} for ${{ matrix.module }}"
